{"pageProps":{"pre":{"path":"_blogs/JS/浏览器是怎么处理多个defer或async的script的/README.md","url":"/blog/JS/浏览器是怎么处理多个defer或async的script的","title":"浏览器是怎么处理多个defer或async的script的","author":"yrobot","keywords":"async,script,defer,浏览器,多个,处理","createTime":1571068800000,"length":315,"content":"<p><a id='top'></a></p>\n<ol>\n<li><p>浏览器下载资源可以并行，但是有上限，不同浏览器的上限不同，但都是在8以内。具体参考：<a href=\"http://www.stevesouders.com/blog/2008/03/20/roundup-on-parallel-connections/\">http://www.stevesouders.com/blog/2008/03/20/roundup-on-parallel-connections/</a></p>\n</li>\n<li><p>浏览器对于同一服务器下的资源可以利用HTTP/1.1的Keep alive，保持tcp层的连接，下个请求就无需再经过tcp连接，减少通信耗时，提高了同一服务器下资源的下载效率。</p>\n</li>\n<li><p>对于不同地址的资源浏览器还是得通过并行资源请求，而因为并行下载线程数量被控制在个位数，所以多个不同地的script势必会造成script下载的拥塞。</p>\n</li>\n</ol>\n"},"blog":{"path":"_blogs/HTML&CSS/css层叠上下文/README.md","url":"/blog/HTML&CSS/css层叠上下文","title":"css层叠上下文","author":"yrobot","keywords":"css,层叠,上下文","createTime":1568649600000,"length":1371,"content":"<p><strong>本页目录：</strong><br><a href=\"#question\">元素之间有重叠，浏览器要怎么展示呢</a><br><a href=\"#how\">怎么确定元素层叠关系</a><br><a href=\"#sxw\">层叠上下文</a><br><a href=\"#xdsx\">层叠顺序</a><br><a href=\"#doit\">实操一下看</a>  </p>\n<p><a id='question'></a></p>\n<h2 id=\"元素之间有重叠，浏览器要怎么展示呢\">元素之间有重叠，浏览器要怎么展示呢</h2>\n<p>  当我们在编写html+css时，常常会遇到元素覆盖的问题，那解释器是怎么解释元素的覆盖的呢？  </p>\n<ul>\n<li>首先我们比确定的是，相邻的普通元素，都是后者覆盖前者的  </li>\n</ul>\n<p>  但是对于相对较远的元素，拥有其他css属性（例如z-index）的属性呢？  </p>\n<ul>\n<li>emmmm，z-index值越大就越靠上？？ </li>\n<li>nono，解释器不是这么简单粗暴的  </li>\n<li>下面我们就来探讨一下 层叠上下文 对元素 层叠关系的影响   </li>\n</ul>\n<p><a id='how'></a></p>\n<h2 id=\"怎么确定元素层叠关系\">怎么确定元素层叠关系</h2>\n<p>前端页面元素的覆盖关系由 <strong>所属的层叠上下文</strong> 和 <strong>元素本身的层叠顺序</strong> 决定  </p>\n<p>先看层叠上下文，再看层叠顺序  </p>\n<p><a id='sxw'></a></p>\n<h2 id=\"层叠上下文\">层叠上下文</h2>\n<ol>\n<li><p>层叠上下文是页面元素的一种属性，页面由普通元素组成，一些元素因为种种原因而带有了层叠上下文  </p>\n</li>\n<li><p>产生层叠上下文的种种原因：  </p>\n<ol>\n<li>页面根元素html天生具有层叠上下文，称之为“根层叠上下文”</li>\n<li>普通元素满足以下条件时具有层叠上下文：a.position值非static  b.z-index值非auto</li>\n<li>CSS3中的新属性也可以产生层叠上下文</li>\n</ol>\n</li>\n<li><p>所有元素的层叠关系都是相对于 最近父层叠上下文元素 来说的   </p>\n</li>\n</ol>\n<p><a id='xdsx'></a></p>\n<h2 id=\"层叠顺序\">层叠顺序</h2>\n<ol>\n<li>层叠关系要在同一个层叠上下文中比较，两元素不在同一个层叠上下文则向上寻找，直到同一个层叠上下文，比较 <code>最开始包含自己的层叠上下文（若有）|| 元素本身</code>   </li>\n<li>当将两者提升到同一个层叠上下文后，根据下图层叠顺序图来判断层叠关系 </li>\n</ol>\n<p>逻辑图如下：<br><img src=\"https://tva1.sinaimg.cn/large/006y8mN6ly1g72kli5irwj30hg08pmyl.jpg\" alt=\"\"></p>\n<p><a id='doit'></a></p>\n<h2 id=\"实操一下看\">实操一下看</h2>\n<p><img src=\"https://tva1.sinaimg.cn/large/006y8mN6ly1g72kpdobofj30x70guacd.jpg\" alt=\"\">  </p>\n<ul>\n<li>建议判断层叠关系时，都在脑海中画一下上图虚拟DOM树  </li>\n</ul>\n<p>比较下以下几个元素的覆盖关系：<br>B5-C3<br>B2-B5<br>C1-C2<br>C3-B5<br>C1-B1   </p>\n<p>根据<a href=\"#how\">怎么确定元素层叠关系</a>，先看层叠上下文，再看层叠顺序  </p>\n<ol>\n<li>看层叠上下文  <pre><code>B5-C3 =&gt; A4-A3   \nB2-B5 =&gt; B2-A4   \nC1-C2 =&gt; A1-B3   \nC3-B5 =&gt; B4-B5   \nC1-B1 =&gt; C1-B1   \n</code></pre>\n</li>\n<li>再根据<a href=\"#xdsx\">层叠顺序</a>的规则去判断元素的层叠关系吧！！！</li>\n</ol>\n"},"next":{"path":"_blogs/计算机网络/计网体系结构.md","url":"/blog/计算机网络/计网体系结构","title":"计网体系结构 - OSI、TCP/IP、五层协议体系","author":"yrobot","keywords":"计网,OSI,TCP,IP,五层协议体系,体系结构","createTime":1538755200000,"length":4125,"content":"<p><strong>本页目录：</strong><br><a href=\"#inall\">简而言之</a><br><a href=\"#osi\">OSI 的体系结构</a><br><a href=\"#tcpip\">TCP/IP 的结构体系</a><br><a href=\"#five\">五层体系结构</a>  </p>\n<p><a id='inall'></a></p>\n<h2 id=\"简而言之\">简而言之</h2>\n<p>总的来说，计网结构体系分成三种：  </p>\n<ol>\n<li>OSI 的体系结构</li>\n<li>TCP/IP 的结构体系</li>\n<li><a href=\"#five\">五层体系结构</a> [着重学习]</li>\n</ol>\n<p><code>OSI的体系结构</code> 是由国际标准化组织ISO提出的一种标准框架，他有7层体系，但是由于 1.OSI缺乏商业驱动 2.协议较复杂，运行效率低   3.OSI层次划分不合理，功能出现重复。\b导致OSI止步于理论层面。  </p>\n<p><code>TCP/IP的结构体系</code> 是由于OSI的复杂不实用，TCP/IP就应运而生了，他在ISO发表之前就出现了。TCP/IP只有4层体系，并且得到了市场的肯定。  </p>\n<p><code>五层体系结构</code> 是因为OSI概念清除体系完整，而TCP/IP更具实用价值，所以我们学习的时候会学习较为折中的 五层协议的体系结构。</p>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tNbRwgy1fvygqapt6bj30g108yti3.jpg\" alt=\"\"></p>\n<table>\n<thead>\n<tr>\n<th>OSI参考层编号</th>\n<th>等效的OSI层</th>\n<th>五层协议体系</th>\n<th>TCP/IP协议体系</th>\n<th>TCP/IP协议示例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>7、6、5</td>\n<td>应用、表示、会话</td>\n<td>应用</td>\n<td>应用层</td>\n<td>HTTP、HTTPS、NFS、NIS、DNS、LDAP、telnet、ftp、rlogin、rsh、rcp、RIP、RDISC、SNMP 等</td>\n</tr>\n<tr>\n<td>4</td>\n<td>传输</td>\n<td>传输</td>\n<td>运输层</td>\n<td>TCP、UDP、SCTP</td>\n</tr>\n<tr>\n<td>3</td>\n<td>网络</td>\n<td>网络</td>\n<td>网际层IP</td>\n<td>IPv4、IPv6、ARP、ICMP</td>\n</tr>\n<tr>\n<td>2</td>\n<td>数据链路</td>\n<td>数据链路</td>\n<td>网络接口层</td>\n<td>PPP、IEEE 802.2</td>\n</tr>\n<tr>\n<td>1</td>\n<td>物理</td>\n<td>物理网络</td>\n<td>网络接口层</td>\n<td>以太网 (IEEE 802.3)、令牌环、RS-232、FDDI 等等</td>\n</tr>\n<tr>\n<td><a id='osi'></a></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"osi-的体系结构\">OSI 的体系结构</h2>\n<p>OSI体系结构，意为开放式系统互联。<br>国际标准组织（国际标准化组织）制定了OSI模型。这个模型把网络通信的工作分为7层<br>分别是 <code>物理层, 数据链路层, 网络层, 传输层, 会话层, 表示层 和 应用层</code>。  </p>\n<p><strong>OSI体系从上到下解析：</strong>  </p>\n<ol>\n<li><p>应用层（Application Layer）提供为应用软件而设的接口，以设置与另一应用软件之间的通信。例如: HTTP，HTTPS，FTP，TELNET，SSH，SMTP，POP3等。</p>\n</li>\n<li><p>表达层（Presentation Layer）把数据转换为能与接收者的系统格式兼容并适合传输的格式。</p>\n</li>\n<li><p>会话层（Session Layer）负责在数据传输中设置和维护计算机网络中两台计算机之间的通信连接。</p>\n</li>\n<li><p>传输层（Transport Layer）把传输表头（TH）加至数据以形成数据包。传输表头包含了所使用的协议等发送信息。例如:传输控制协议（TCP）等。</p>\n</li>\n<li><p>网络层（Network Layer）决定数据的路径选择和转寄，将网络表头（NH）加至数据包，以形成分组。网络表头包含了网络数据。例如:互联网协议（IP）等。</p>\n</li>\n<li><p>数据链路层（Data Link Layer）负责网络寻址、错误侦测和改错。当表头和表尾被加至数据包时，会形成帧。数据链表头（DLH）是包含了物理地址和错误侦测及改错的方法。数据链表尾（DLT）是一串指示数据包末端的字符串。例如以太网、无线局域网（Wi-Fi）和通用分组无线服务（GPRS）等。<br>分为两个子层：逻辑链路控制（logic link control，LLC）子层和介质访问控制（media access control，MAC）子层。</p>\n</li>\n<li><p>物理层（Physical Layer）在局部局域网上传送数据帧（data frame），它负责管理计算机通信设备和网络媒体之间的互通。包括了针脚、电压、线缆规范、集线器、中继器、网卡、主机适配器等。</p>\n</li>\n</ol>\n<p><a id='tcpip'></a></p>\n<h2 id=\"tcpip-的结构体系\">TCP/IP 的结构体系</h2>\n<p><strong>1. 本机内TCP/IP体系结构展示：</strong><br><img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fvzspp8fp6j30d9073n1n.jpg\" alt=\"\">  </p>\n<p><strong>2. 网络间TCP/IP体系结构展示：</strong><br><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fvytqvroucj30fu09045j.jpg\" alt=\"\">  </p>\n<p><a id='from5'></a>  </p>\n<p><strong>3. TCP/IP 体系\b从上到下解析</strong>  </p>\n<ol>\n<li><p><strong>应用层：</strong>\n应用层是体系结构中的最高层，它直接为用户的应用程序提供服务，在因特网中应用层的协议很多，如支持万维网应用的http协议，支持电邮的smtp协议，支持文件传输的ftp协议等等。<br>我们将应用层交互的数据单元称为 __报文__。 </p>\n</li>\n<li><p><strong>运输层：</strong> 它为两个主机中的进程间提供通用的传输服务。主要有复用(向下传)和分用(向上传)两个功能。<br> 运输层主要使用以下两种协议：TCP和UDP   </p>\n<ul>\n<li>TCP：_Transmission Contol Protocol_，传输控制协议，面向连接的，数据传输的单位是报文段，能够提供可靠地交付。  </li>\n<li>UDP：_User Datagram Protocol_，用户数据报协议，无连接的，数据传输的单位是用户数据报，不保证提供可靠地交付。</li>\n</ul>\n</li>\n<li><p><strong>网络层：</strong>\n 负责为分组交换网上的不同主机提供通信服务。<br> (作用1)在发送数据时，网络层把运输层产生的报文段或用户数据报封装成分组或包进行传送。<br> 在TCP/IP体系中，由于网络层使用IP协议，因此分组也叫做IP数据报，简称数据报。<br> (作用2)网络层的另一个任务就是要选择合适的路由，<br> 使源主机运输层所传下来的分组，能够通过网络中的路由器找到目的主机。  </p>\n</li>\n<li><p><strong>网络接口层：</strong> 对于TCP/IP结构体系，的这一层主要包含 五层协议 的数据链路层和物理层    </p>\n<ul>\n<li><p>数据链路层：<br>链路层将网络层交下来的IP数据报组装成帧，在两个相邻结点之间的链路上透明地传送帧中的数据。控制端在接收数据时，控制信息使接收端能够知道一个帧从哪个比特开始和到哪个比特结束。这样，数据链路层在收到一个帧后，就可从中提取出数据部分，上交给网络层。控制信息还使得接收端能够检测到所收到的帧中有无差错。如果发现有差错，数据链路层就简单地丢弃这个出错的帧，以免传下去白白浪费网络资源。如果需要改正错误，就由运输层的TCP协议来完成。(数据信息的确认交给更高层的网络层或者应用层实现)</p>\n</li>\n<li><p>物理层：在物理层上所传数据的单位是比特。物理层的任务就是透明地传送比特流。</p>\n</li>\n</ul>\n</li>\n</ol>\n<p><a id='five'></a></p>\n<h2 id=\"五层体系结构\">五层体系结构</h2>\n<p>五层体系结构主要是将TCP/IP体系拆分成5层，便于学习：  </p>\n<ol>\n<li>__应用层__：应用层定义的是 应用间通信和交互的规则，如HTTP、FTP等</li>\n<li>__运输层__：它为两个主机中的进程间提供通用的传输服务。主要有复用(向下传)和分用(向上传)两个功能。运输方式分为TCP、UDP两种协议</li>\n<li>__网络层__：为运输层的数据包选择合适的路由协议(TCP/IP中用的是IP协议)，地址解析 和 路由 是网络层的重要目的。</li>\n<li>__数据链路层__：数据链路层在不可靠的物理介质上提供可靠的传输。作用包括：物理地址寻址、数据的成帧、流量控制、数据的检错、重发等。</li>\n<li>__物理层__：物理层主要负责 数据 和 物理信号 之间的互相转换。(比如0和1转换为电信号分别用几伏表示传输)</li>\n</ol>\n<p>具体每层的内容参看<a href=\"#from5\">TCP/IP 体系\b从上到下解析</a>  </p>\n<p>五层体系结构的数据传输 <strong>图解</strong> ：<br><img src=\"https://ws3.sinaimg.cn/large/006tNbRwgy1fw0ndnh4hzj30rs0d4qiu.jpg\" alt=\"\"></p>\n"}},"__N_SSG":true}