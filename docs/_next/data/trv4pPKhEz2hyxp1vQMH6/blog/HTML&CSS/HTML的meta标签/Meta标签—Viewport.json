{"pageProps":{"pre":{"path":"_blogs/CSS3/CSS3新增属性/README.md","url":"/blog/CSS3/CSS3新增属性","title":"CSS3新增属性","author":"yrobot","keywords":"CSS3,属性,新增","createTime":1535299200000,"length":11195,"content":"<p><strong>本页目录：</strong><br><a href=\"#id1\">CSS3 边框</a><br><a href=\"#id2\">CSS3 背景</a><br><a href=\"#id3\">CSS3 文本效果</a><br><a href=\"#id4\">CSS3 字体</a><br><a href=\"#id5\">CSS3 2D 转换</a><br><a href=\"#id6\">CSS3 3D 转换</a><br><a href=\"#id7\">CSS3 过渡</a><br><a href=\"#id8\">CSS3 动画</a><br><a href=\"#id9\">CSS3 多列</a><br><a href=\"#id10\">CSS3 用户界面</a>  </p>\n<p>本文框架主要参考<a href=\"http://www.w3school.com.cn/css3/index.asp\">W3school的CSS教程</a>，在此感谢!</p>\n<p><a id='id1'></a></p>\n<h2 id=\"css3-边框\">CSS3 边框</h2>\n<p><strong>CSS3新增的边框属性：</strong>  </p>\n<ol>\n<li>__border-radius__：设置元素的圆角，还支持单个圆角设置，<code>border-top(bottom)-left(right)-radius</code>。<br><strong>语法：</strong> <code>border-radius: 1-4 length|% / 1-4 length|%;</code>  <ul>\n<li>按此顺序设置每个 radii 的四个值(类似margin属性设置，\b对边相同可简写)。\b   </li>\n<li><code>ength</code> 定义圆角的形状。    </li>\n<li><code>%</code> 以百分比定义圆角的形状。<br><strong>示例：</strong> <code>border-radius:2em;</code><br><strong>示例：</strong> <code>border-radius: 2em 1em 4em 3em;</code><br><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fuocgpiov7j30hg0380su.jpg\" alt=\"\">  </li>\n</ul>\n</li>\n<li>__box-shadow__：设置元素方框阴影<br><strong>语法：</strong><code>box-shadow: h-shadow v-shadow blur spread color inset;</code>   <ul>\n<li><code>h-shadow</code> 必需。水平阴影的位置。允许负值        </li>\n<li><code>v-shadow</code> 必需。垂直阴影的位置。允许负值    </li>\n<li><code>blur</code> 可选。模糊距离    </li>\n<li><code>spread</code> 可选。阴影的尺寸     </li>\n<li><code>color</code> 可选。阴影的颜色   </li>\n<li><code>inset</code> 可选。将外部阴影 (outset) 改为内部阴影<br><strong>示例：</strong> <code>box-shadow: 10px 10px 5px #888888;</code><br><img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fuoch950z7j30j007kglk.jpg\" alt=\"\">  </li>\n</ul>\n</li>\n<li>__border-image__：设置元素的边框为图片<br><strong>语法：</strong>   border-image 属性是一个简写属性   <ul>\n<li><code>border-image-source</code> 用在边框的图片的路径。      </li>\n<li><code>border-image-slice</code> 图片边框向内偏移。      </li>\n<li><code>border-image-width</code> 图片边框的宽度。      </li>\n<li><code>border-image-outset</code> 边框图像区域超出边框的量。      </li>\n<li><code>border-image-repeat</code> 图像边框是否应平铺(repeated)、铺满(rounded)或拉伸(stretched)。<br><strong>示例：</strong>   <code>border-image: url(/i/border_image_button.png) 0 14 0 14 stretch;</code><br><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fuochr5fydj30lo04i0tb.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ol>\n<p><strong>浏览器支持：</strong>\n<img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fuo2czkkuaj318w0eidkx.jpg\" alt=\"\"></p>\n<p><a id='id2'></a></p>\n<h2 id=\"css3-背景\">CSS3 背景</h2>\n<p><strong>CSS3新增的背景属性：</strong>  </p>\n<ol>\n<li><strong>background-size</strong>:  规定背景图像的尺寸<br><strong>语法：</strong>   <code>background-size: length|percentage|cover|contain; </code>  <ul>\n<li><code>length</code> 设置背景图像的高度和宽度。第一个值设置宽度，第二个值设置高度。如果只设置一个值，则第二个值会被设置为 &quot;auto&quot;。     </li>\n<li><code>percentage</code> 以父元素的百分比来设置背景图像的宽度和高度。第一个值设置宽度，第二个值设置高度。如果只设置一个值，则第二个值会被设置为 &quot;auto&quot;。   </li>\n<li><strong><code>cover</code></strong> 把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。背景图像的某些部分也许无法显示在背景定位区域中。  </li>\n<li><strong><code>contain</code></strong> 把图像图像扩展至最大尺寸，以使其宽度和高度完全适应内容区域。<br><strong>示例：</strong>   <code>border-radius:50%;</code>  </li>\n</ul>\n</li>\n<li><strong>background-origin</strong>:  background-origin 属性规定 background-position 属性相对于什么位置来定位<br><strong>语法：</strong>   <code>background-origin: padding-box|border-box|content-box; </code>    <ul>\n<li><code>padding-box</code> 背景图像相对于内边距框来定位。      </li>\n<li><code>border-box</code> 背景图像相对于边框盒来定位。       </li>\n<li><code>content-box</code> 背景图像相对于内容框来定位。<br><strong>示例：</strong>   <code>background-origin:content-box;</code></li>\n</ul>\n</li>\n</ol>\n<p><strong>浏览器支持：</strong>\n<img src=\"https://ws2.sinaimg.cn/large/006tNbRwgy1fuo7a1mn2mj318w09q77m.jpg\" alt=\"\"></p>\n<p><a id='id3'></a></p>\n<h2 id=\"css3-文本效果\">CSS3 文本效果</h2>\n<p><strong>CSS3新增的文本效果属性：</strong>  </p>\n<ol>\n<li><strong>text-shadow</strong>:  text-shadow 属性向文本设置阴影<br><strong>语法：</strong>   <code>text-shadow: h-shadow v-shadow blur color;</code>  <ul>\n<li><code>h-shadow</code>    必需。水平阴影的位置。允许负值。  </li>\n<li><code>v-shadow</code>    必需。垂直阴影的位置。允许负值。   </li>\n<li><code>blur</code>    可选。模糊的距离。  </li>\n<li><code>color</code> 可选。阴影的颜色。<br><strong>示例：</strong>   <code>text-shadow:2px 2px 8px #FF0000;</code><br><img src=\"https://ws2.sinaimg.cn/large/006tNbRwgy1fuocifrqvpj30eo03odgz.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li><strong>word-wrap</strong>:  word-wrap 属性允许长单词或 URL 地址换行到下一行<br><strong>语法：</strong>   <code>word-wrap: normal|break-word;</code>  <ul>\n<li><code>normal</code> 只在允许的断字点换行（浏览器保持默认处理）。 </li>\n<li><code>break-word</code> 在长单词或 URL 地址内部进行换行。<br><strong>示例：</strong>   <code>word-wrap:break-word;</code><br><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fuocjavfcdj313y0mogpb.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ol>\n<p><strong>浏览器支持：</strong>\n<img src=\"https://ws3.sinaimg.cn/large/006tNbRwgy1fuo7ays4aaj318s09iada.jpg\" alt=\"\"></p>\n<p><a id='id4'></a></p>\n<h2 id=\"css3-字体\">CSS3 字体</h2>\n<p><strong>CSS3新增的字体属性：</strong>  </p>\n<ol>\n<li><strong>@font-face</strong>:  它允许网页开发者为其网页指定在线字体,便于在后面font-family中调用<br><strong>语法：</strong>   <pre><code> @font-face {\n [ font-family: &lt;family-name&gt;; ] ||\n [ src: [ &lt;url&gt; [ format(&lt;string&gt;#) ]? | &lt;font-face-name&gt; ]#; ] ||\n [ unicode-range: &lt;urange&gt;#; ] ||\n [ font-variant: &lt;font-variant&gt;; ] ||\n [ font-feature-settings: normal | &lt;feature-tag-value&gt;#; ] ||\n [ font-variation-settings: normal | [ &lt;string&gt; &lt;number&gt;] # ||\n [ font-stretch: &lt;font-stretch&gt;; ] ||\n [ font-weight: &lt;weight&gt;; ] ||\n [ font-style: &lt;style&gt;; ]\n }\n</code></pre>\n<ul>\n<li><code>font-family</code> name 必需。规定字体的名称。  </li>\n<li><code>src</code> URL 必需。定义字体文件的 URL。  </li>\n<li><code>font-stretch</code>  可选。定义如何拉伸字体。默认是 &quot;normal&quot;。<br>   normal<br>   condensed<br>   ultra-condensed<br>   extra-condensed<br>   semi-condensed<br>   expanded<br>   semi-expanded<br>   extra-expanded<br>   ultra-expanded  </li>\n<li><code>font-style</code>    可选。定义字体的样式。默认是 &quot;normal&quot;。<br>   ormal<br>   italic<br>   oblique  </li>\n<li><code>font-weight</code> 可选。定义字体的粗细。默认是 &quot;normal&quot;。<br>   normal<br>   bold<br>   100<br>   200<br>   300<br>   400<br>   500<br>   600<br>   700<br>   800<br>   900  </li>\n<li><code>unicode-range</code> unicode-range 可选。定义字体支持的 UNICODE 字符范围。默认是 &quot;U+0-10FFFF&quot;。<br><strong>示例：</strong><br>```\n@font-face {\n   font-family: &quot;Bitstream Vera Serif Bold&quot;;\n   src: url(&quot;<a href=\"http://developer.mozilla.org/@api/deki/files/2934/=VeraSeBd.ttf&quot;\">http://developer.mozilla.org/@api/deki/files/2934/=VeraSeBd.ttf&quot;</a>);\n   }</li>\n</ul>\n body { font-family: &quot;Bitstream Vera Serif Bold&quot;, serif }\n``` </li>\n</ol>\n<p><strong>浏览器支持：</strong>\n<img src=\"https://ws3.sinaimg.cn/large/006tNbRwgy1fuo7ituu00j318q04odhc.jpg\" alt=\"\"></p>\n<p><a id='id5'></a></p>\n<h2 id=\"css3-2d-转换\">CSS3 2D 转换</h2>\n<p><strong>CSS3新增的2D变换属性：</strong>   通过 CSS3 转换，我们能够对元素进行移动、缩放、转动、拉长或拉伸。</p>\n<p>跳转 <a href=\"../CSS3-2D%E8%BD%AC%E6%8D%A2\">CSS3-2D转换</a></p>\n<p><strong>浏览器支持：</strong>\n<img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fuo7z8j9byj318s04s3zs.jpg\" alt=\"\"><br>Chrome 和 Safari 需要前缀 -webkit-<br>Internet Explorer 9 需要前缀 -ms-  </p>\n<p><a id='id6'></a></p>\n<h2 id=\"css3-3d-转换\">CSS3 3D 转换</h2>\n<p><strong>CSS3新增的3D变换属性：</strong>  CSS3 3D 转换支持开发者在css代码中利用css3的3D函数，在页面里开发出一些简单的3D效果。  </p>\n<p>跳转 <a href=\"../CSS3-3D%E8%BD%AC%E6%8D%A2\">CSS3-3D转换</a></p>\n<p><strong>浏览器支持：</strong>\n<img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fuqf7u1vz0j30u204ot9y.jpg\" alt=\"\">\nInternet Explorer 10 和 Firefox 支持 3D 转换。<br>Chrome 和 Safari 需要前缀 -webkit-。<br>Opera 仍然不支持 3D 转换（它只支持 2D 转换）。</p>\n<p><a id='id7'></a></p>\n<h2 id=\"css3-过渡\">CSS3 过渡</h2>\n<p><strong>CSS3的过渡属性：</strong>  过渡属性可以设定元素在某些属性改变时，对变化过程填充逐渐变换的动画，类似于flash的补间动画  </p>\n<p>跳转 <a href=\"../CSS3%E8%BF%87%E6%B8%A1\">CSS3过渡</a></p>\n<p><strong>浏览器支持：</strong>\n<img src=\"https://ws1.sinaimg.cn/large/0069RVTdgy1fup7uarmc3j30u204sjsn.jpg\" alt=\"\"></p>\n<p><a id='id8'></a></p>\n<h2 id=\"css3-动画\">CSS3 动画</h2>\n<p><strong>CSS3新增的动画属性：</strong>  通过CSS3动画，我们能够创建动画，这可以在许多网页中取代动画图片、Flash动画 以及 JavaScript。作为页面切换的交互动画。  </p>\n<p>跳转 <a href=\"../CSS3%E5%8A%A8%E7%94%BB\">CSS3动画</a></p>\n<p><strong>浏览器支持：</strong>\n<img src=\"https://ws2.sinaimg.cn/large/0069RVTdgy1fupd51aiv4j30u209k76w.jpg\" alt=\"\"><br>Internet Explorer 10、Firefox 以及 Opera 支持 @keyframes 规则和 animation 属性。<br>Chrome 和 Safari 需要前缀 -webkit-。</p>\n<p><a id='id9'></a></p>\n<h2 id=\"css3-多列\">CSS3 多列</h2>\n<p><strong>CSS3新增的多列属性：</strong> 使用css3多列属性，可以将内容\b分成几列，类似报纸中文章的形式。   </p>\n<ol>\n<li><p><strong>column-count</strong>: 规定元素应该被分隔的列数。<br><strong>语法：</strong>   <code>column-count: number|auto;</code>  </p>\n<ul>\n<li><code>number</code> 元素内容将被划分的最佳列数。   </li>\n<li><code>auto</code> 由其他属性决定列数，比如 &quot;column-width&quot;。<br><strong>示例：</strong><br>```\ndiv\n{</li>\n<li>moz-column-count: 3; /* Firefox */</li>\n<li>webkit-column-count: 3; /* Safari 和 Chrome */\ncolumn-count: 3;\n}\n``` \n<img src=\"https://ws2.sinaimg.cn/large/006tNbRwgy1fuqrbczw9jj30x80d679n.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li><p><strong>column-fill</strong>: 规定如何填充列。<br><strong>语法：</strong>   <code>column-fill: balance|auto;</code>  </p>\n<ul>\n<li><code>balance</code> 对列进行协调。浏览器应对列长度的差异进行最小化处理。   </li>\n<li><code>auto</code> 按顺序对列进行填充，列长度会各有不同。<br><strong>示例：</strong>   <pre><code>div\n{\ncolumn-fill:auto;\n}\n</code></pre>\n</li>\n</ul>\n</li>\n<li><p><strong>column-gap</strong>: 规定列之间的间隔。<br><strong>语法：</strong>   <code>column-gap: length|normal;</code>  </p>\n<ul>\n<li><code>length</code> 把列间的间隔设置为指定的长度。   </li>\n<li><code>normal</code> 规定列间间隔为一个常规的间隔。W3C 建议的值是 1em。<br><strong>示例：</strong><br>```\ndiv\n{</li>\n<li>moz-column-gap:40px; /* Firefox */</li>\n<li>webkit-column-gap:40px; /* Safari 和 Chrome */\ncolumn-gap:40px;\n}\n``` \n<img src=\"https://ws3.sinaimg.cn/large/006tNbRwgy1fuqrjcfhi9j30xi08wdiy.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li><p><strong>column-rule</strong>: 设置所有 column-rule-* 属性的简写属性。包括 列之间 的 颜色、样式、宽度<br><strong>语法：</strong>   <code>column-rule: column-rule-width column-rule-style column-rule-color;</code>  </p>\n<ul>\n<li><p><strong><code>column-rule-width</code></strong>    设置列之间的宽度规则。 </p>\n<ul>\n<li><strong>语法：</strong>   <code>column-rule-width: thin|medium|thick|length;</code>   </li>\n<li><code>thin</code>    定义纤细规则。  </li>\n<li><code>medium</code>    定义中等规则。  </li>\n<li><code>thick</code>    定义宽厚规则。    </li>\n<li><code>length</code>    规定规则的宽度。</li>\n</ul>\n</li>\n<li><p><strong><code>column-rule-style</code></strong>    设置列之间的样式规则。  </p>\n<ul>\n<li><strong>语法：</strong>   <code>column-rule-style: none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset;</code>   </li>\n<li><code>none</code>    定义没有规则。      </li>\n<li><code>hidden</code>    定义隐藏规则。      </li>\n<li><code>dotted</code>    定义点状规则。      </li>\n<li><code>dashed</code>    定义虚线规则。      </li>\n<li><code>solid</code>    定义实线规则。      </li>\n<li><code>double</code>    定义双线规则。      </li>\n<li><code>groove</code>    定义 3D grooved 规则。该效果取决于宽度和颜色值。      </li>\n<li><code>ridge</code>    定义 3D ridged 规则。该效果取决于宽度和颜色值。      </li>\n<li><code>inset</code>    定义 3D inset 规则。该效果取决于宽度和颜色值。      </li>\n<li><code>outset</code>    定义 3D outset 规则。该效果取决于宽度和颜色值。      </li>\n</ul>\n</li>\n<li><p><strong><code>column-rule-color</code></strong>    设置列之间的颜色规则。   </p>\n<ul>\n<li><strong>语法：</strong>   <code>column-rule-color: color;</code>   </li>\n<li><code>color</code>    规定颜色规则。请参阅 <a href=\"http://www.w3school.com.cn/cssref/css_colors_legal.asp\">CSS 颜色值</a>。  </li>\n</ul>\n</li>\n</ul>\n<p><strong>示例：</strong>   </p>\n<pre><code> div\n {\n -moz-column-rule:3px outset #ff0000;    /* Firefox */\n -webkit-column-rule:3px outset #ff0000;    /* Safari and Chrome */\n column-rule:3px outset #ff0000;\n }\n</code></pre>\n<p><img src=\"https://ws2.sinaimg.cn/large/006tNbRwgy1fusmomdnszj30xg09mgpn.jpg\" alt=\"\"></p>\n</li>\n</ol>\n<p><strong>浏览器支持：</strong>\n<img src=\"https://ws3.sinaimg.cn/large/006tNbRwgy1fuqqzk5gl6j30u20eewi4.jpg\" alt=\"\"> \nInternet Explorer 10 和 Opera 支持多列属性。<br>Firefox 需要前缀 -moz-。<br>Chrome 和 Safari 需要前缀 -webkit-。  </p>\n<p><a id='id10'></a></p>\n<h2 id=\"css3-用户界面\">CSS3 用户界面</h2>\n<p><strong>CSS3新增的用户界面属性：</strong> 利用css3的用户界面属性，可以重设元素尺寸、盒尺寸以及轮廓等。  </p>\n<p><strong>先看所有的用户界面属性</strong>   </p>\n<ul>\n<li><code>appearance</code>    允许您将元素设置为标准用户界面元素的外观  </li>\n<li><code>box-sizing</code>    允许您以确切的方式定义适应某个区域的具体内容。  </li>\n<li><code>icon</code>    为创作者提供使用图标化等价物来设置元素样式的能力。  </li>\n<li><code>nav-down</code>    规定在使用 arrow-down 导航键时向何处导航。  </li>\n<li><code>nav-index</code>    设置元素的 tab 键控制次序。      </li>\n<li><code>nav-left</code>    规定在使用 arrow-left 导航键时向何处导航。      </li>\n<li><code>nav-right</code>    规定在使用 arrow-right 导航键时向何处导航。      </li>\n<li><code>nav-up</code>    规定在使用 arrow-up 导航键时向何处导航。      </li>\n<li><code>outline-offset</code>    对轮廓进行偏移，并在超出边框边缘的位置绘制轮廓。      </li>\n<li><code>resize</code>    规定是否可由用户对元素的尺寸进行调整。      </li>\n</ul>\n<p><strong>\b我这边简单介绍一下 浏览器支持比较好的 几个属性</strong>  </p>\n<ol>\n<li><p><strong>box-sizing</strong>: 改变css 的 width、height 在盒模型中的指向。  </p>\n<ul>\n<li>因为css默认width指向的是盒模型的内容宽度(图中蓝色部分)，而 整个盒模型的宽度 = padding + border + 内容width，整个盒模型所占据文本流的位置还要包括其margin值。  </li>\n<li>而一般我们所想的，我们设置的width值，应该是 整个\b盒模型的宽度，所以问题就产生了。  </li>\n<li>那么这个<code>box-sizing</code>，就是用来解决\bwidth、height 在盒模型中的指向问题的。<br><img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fusoa0l7n5j30ak0aa74j.jpg\" alt=\"\">  </li>\n</ul>\n<p><strong>语法：</strong>   <code>box-sizing: content-box|border-box|inherit;</code>  </p>\n<ul>\n<li><code>content-box</code> 默认，CSS2.1 规定的宽度高度行为。将width、height指向内容宽度，padding、border不被包括在内。<br><em>width、height指向如下图：</em><br><img src=\"https://ws3.sinaimg.cn/large/006tNbRwgy1fusob65rl6j30au0aeaam.jpg\" alt=\"\"> </li>\n<li><code>border-box</code> width指向 内容宽度+padding+border，内容宽度根据减法自适应。height同理。<br><em>width、height指向如下图：</em><br><img src=\"https://ws2.sinaimg.cn/large/006tNbRwgy1fusob3mmr2j30au0aeq3i.jpg\" alt=\"\"></li>\n<li><code>inherit</code>   继承 父元素 box-sizing属性的值。  </li>\n</ul>\n<p><strong>示例：</strong>   </p>\n<pre><code> div\n {\n box-sizing:border-box;\n -moz-box-sizing:border-box; /* Firefox */\n -webkit-box-sizing:border-box; /* Safari */\n }\n</code></pre>\n<p><strong>浏览器支持：</strong>\n <img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fusofkoju7j30vc06oabn.jpg\" alt=\"\">\n Internet Explorer、Opera 以及 Chrome 支持 box-sizing 属性。<br> Firefox 支持替代的 -moz-box-sizing 属性。   </p>\n</li>\n<li><p><strong>outline-offset</strong>: 此属性对轮廓进行偏移。<br><strong>语法：</strong>   <code>outline-offset: length|inherit;</code>  </p>\n<ul>\n<li><code>length</code>    轮廓与边框边缘的距离。  </li>\n<li><code>inherit</code>    规定应从父元素继承 outline-offset 属性的值。  </li>\n</ul>\n<p><strong>示例：</strong>   </p>\n<pre><code> div\n {\n border:2px solid black;\n outline:2px solid red;\n outline-offset:15px;\n }\n</code></pre>\n<p><strong>使用对比：</strong> <em>后者为使用了<code>outline-offset:15px;</code></em><br><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fuson2ha9gj30ck07mwev.jpg\" alt=\"\">\n<img src=\"https://ws2.sinaimg.cn/large/006tNbRwgy1fusomvlpg6j30cs08ajrs.jpg\" alt=\"\"><br><strong>浏览器支持：</strong><br> 所有主流浏览器都支持 outline-offset 属性，除了 Internet Explorer。  </p>\n</li>\n</ol>\n<p><strong>\b其余几个属性只有小部分浏览器支持</strong><br><a href=\"http://www.w3school.com.cn/css3/css3_user_interface.asp\"><strong>参看所有转换属性的使用</strong></a>  </p>\n"},"blog":{"path":"_blogs/HTML&CSS/HTML的meta标签/Meta标签—Viewport/README.md","url":"/blog/HTML&CSS/HTML的meta标签/Meta标签—Viewport","title":"Meta标签—Viewport","author":"yrobot","keywords":"Meta,Viewport,标签","createTime":1535126400000,"length":4409,"content":"<p><strong>本页目录：</strong><br><a href=\"#id1\">Viewport概念</a><br><a href=\"#id2\">看下效果</a><br><a href=\"#id3\">关于缩放</a><br><a href=\"#id4\">布局视口的大小</a><br><a href=\"#id5\">javascript相关</a><br><a href=\"#id6\">总结</a>  </p>\n<p><a id='id1'></a></p>\n<h2 id=\"viewport概念\">Viewport概念</h2>\n<h4 id=\"三个视口\">三个视口</h4>\n<ol>\n<li>布局视口  <ul>\n<li>本文的重点，meta属性设置的对象。</li>\n<li>布局视口 可以理解为\b\b\b包含整个页面的区域，所以布局视口可能比可视区域还要大。\n<img src=\"https://ws2.sinaimg.cn/large/006tNbRwgy1fun61b567vj317g0wan4b.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>视觉视口<ul>\n<li>视觉视口 是用户正在看到的网站的区域。用户可以通过缩放来操作视觉视口，同时不会影响布局视口，布局视口仍保持原来的宽度。\n<img src=\"https://ws3.sinaimg.cn/large/006tNbRwgy1fun62jqutdj317c0w8gsh.jpg\" alt=\"\">\n<a href=\"\" id=\"ideal-viewport\"></a></li>\n</ul>\n</li>\n<li>理想视口<ul>\n<li>移动端浏览器还有一个理想视口的概念。其宽度就是\b下文提到的 <strong>理想视口宽度</strong></li>\n<li>布局视口的默认宽度并不是一个理想的宽度，大家从上面的图就可以看出来了，所以苹果公司就引进了理想窗口这个概念。</li>\n<li>理想视口就是\b最理想的布局视口的尺寸。将布局视口设置成理想视口，页面就能够适应到合适的尺寸，用户就不再需要自己去缩放和拖动网页了。</li>\n<li>在\b移动端，只有布局视口和理想视口一样大时，移动端显示在和PC预期一样，否则浏览器会缩放(不是修改布局视口，而是将整个内容缩小或放大)，以适应移动端显示。从而导致了移动端字体过小等问题。\n<img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fun6qqa0xrj30my04s3z4.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"以下viewport默认指的是布局视口\"><strong>以下viewport默认指的是布局视口</strong></h3>\n<ul>\n<li>通俗的讲，viewport就是html的\b外层区域，在使用百分比布局时，html设置width：100%就是根据viewport宽度来的，所以viewport可以\b理解为html的父素。\n<a href=\"\" id=\"default\"></a></li>\n</ul>\n<h4 id=\"默认viewport的宽度\">默认viewport的宽度</h4>\n<ul>\n<li>下图列出了一些设备上浏览器的默认viewport的宽度。</li>\n<li>要注意的是在PC浏览器中，布局视口和视觉视口是相同的，布局视口默认视口宽度会被覆盖。\n<img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fun4nndiqkj30r304caar.jpg\" alt=\"\">\n<a href=\"\" id=\"initial-scale\"></a></li>\n</ul>\n<h4 id=\"initial-scale\">initial-scale</h4>\n<ul>\n<li>而viewport还有一个initial-scale的概念，这个initial-scale是一个数值，用于记录 <a href=\"#ideal-viewport\">理想视口宽度</a> / viewport宽度 的值。即 initial-scale = 理想视口宽度 / viewport宽度 。</li>\n<li>而每个设备的 理想视口宽度 又是固定的，所以通过设置initial-scale就可确定viewport的值。以下是一些设备 理想视口宽度 的\b值：\n<img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fun4n9lduzj30pw04cgme.jpg\" alt=\"\"></li>\n</ul>\n<p><a id='id2'></a></p>\n<h2 id=\"看下效果\">看下效果</h2>\n<h4 id=\"代码：\">代码：</h4>\n<pre><code>&lt;body&gt;\n    &lt;p class=&quot;title&quot;&gt;My Title&lt;/p&gt;\n    &lt;p class=&quot;content&quot;&gt;Apple documentation: Using the Viewport Meta Tag\n        Mozilla: Using the viewport meta tag to control layout on mobile browsers\n        quirksmode.org: A tale of two viewports\n        w3.org Mobile Web Application Best Practices: Use Meta Viewport Element To Identify Desired Screen Size\n        Quick Tip: Never use maximum-scale=1.0 on the A11y Project\n        Tim Kadlec explains IE10 Snap Mode and Responsive Design\n        The @viewport rule proposal&lt;/p&gt;\n&lt;/body&gt;\n</code></pre>\n<h4 id=\"pc端chrome显示效果：\">PC端Chrome显示效果：</h4>\n<p><img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fum93ooxmzj31720j6q7b.jpg\" alt=\"\"></p>\n<ul>\n<li>width：775px<h4 id=\"移动端不加meta的viewport标签：\">移动端不加meta的Viewport标签：</h4>\n<img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fum9642gi8j30ie0fgdil.jpg\" alt=\"\"></li>\n<li>width：980px（iPhone6的<a href=\"#default\">viewport的默认宽度</a>为980px）<h4 id=\"移动端加meta的viewport标签：\">移动端加meta的Viewport标签：</h4>\n</li>\n<li>head添加\b标签\b：<code>&lt;meta name=&quot;viewport&quot; content=&quot;initial-scale=1.0&quot;&gt;</code>\n<img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fum9bgbjjgj30ig0so78a.jpg\" alt=\"\"></li>\n<li>width：375px (iphone6设备的 理想视口宽度 为375px，所以<code>viewport = 375px / 1</code>, 参考<a href=\"#initial-scale\">initial-scale</a>)<h4 id=\"差别\">差别</h4>\n</li>\n<li>使用了<code>initial-scale=1.0</code>之后，浏览器的viewport从默认的980px变为\b理想视口宽度375px的1：1关系的宽度375px</li>\n<li>\b设置<code>initial-scale=2.0</code>后viewport变为<code>375px/2=187px</code>\n<img src=\"https://ws2.sinaimg.cn/large/006tNbRwgy1fumb1i32fjj30i60gimy4.jpg\" alt=\"\"></li>\n<li>可见 <strong><code>viewport宽度 = 理想视口宽度 / initial-scale值</code></strong></li>\n</ul>\n<p><a id='id3'></a></p>\n<h2 id=\"关于缩放\">关于缩放</h2>\n<ul>\n<li><p>手机上放大，视觉视口缩小，布局视口不变，所以我们看到的css布局是不变的。  </p>\n</li>\n<li><p>PC上放大，视觉视口缩小，由于PC的布局视口和视觉视口是相同的，所以布局视口也变小，这就是我们在桌面端缩放的时候样式有时候会错乱的原因。  </p>\n</li>\n<li><p>据说移动端css布局不改变也是因为移动端进行重绘的成本太高  </p>\n</li>\n</ul>\n<p><a id='id4'></a></p>\n<h2 id=\"布局视口的大小\">布局视口的大小</h2>\n<p>下面根据页面的解析过程来说明一下，浏览器在页面布局时的计算viewport的流程：   </p>\n<p><strong>没有viewport</strong>  </p>\n<ul>\n<li>当页面没有声明viewport时，手机浏览器会取980px作为默认viewport的width值（IE/BlackBerry：1024px），然后全部显示，所以 默认的scale值 = 理想视口宽度  / 默认viewport宽度 。  </li>\n</ul>\n<p><strong>存在viewport</strong><br>当页面声明了viewport标签时，存在以下情况：  </p>\n<ul>\n<li>仅对于<code>width=device-width</code>，则viewport的宽高采用 理想视口 的尺寸(iPhone，iPad横屏时宽度是 理想视口 的宽度，而非高度)</li>\n<li>仅对于<code>initial-scale=1</code>，则viewport的宽高采用 理想视口 的尺寸( IE横屏时宽度是 理想视口 的宽度，而非高度)</li>\n<li>单独设置<code>width=x</code>或者<code>initial-scale=x</code>时，可以通过width直接获得或者通过initial-scale（理想视口宽度/initial-scale）计算出viewport的尺寸，需要注意的是viewport是有范围的(最小: 1/5 * 理想视口宽度)，所以当超出尺寸范围时，浏览器会选择相应的最大值或者最小值。</li>\n<li>如果width和initial-scale都存在时，会根据initial-scale计算出来的结果（理想视口宽度/initial-scale）与width值进行比较，取较大的值。（而Android Webkit则采用width值，IE永远认为<code>initial-scale=1</code>，但是需要注意layout的取值范围）。</li>\n</ul>\n<p><a id='id5'></a></p>\n<h2 id=\"javascript相关\">javascript相关</h2>\n<p>厂商间基本遵循的规范：  </p>\n<ul>\n<li><code>document.documentElement.clientWidth</code>： 表示 __布局窗口宽度__，可进行类似媒体查询；</li>\n<li><code>window.innerWidth</code>：表示 __视觉窗口宽度__，一般不会用； </li>\n<li><code>screen.width</code>: 表示 __理想窗口宽度__，兼容性据说差别很大；一般没啥用； </li>\n<li><code>orientationchange</code>事件，只要设备改变了方向都会触发，兼容性好；  </li>\n<li>移动端最好不要用<code>resize</code>事件，支持很差;  </li>\n</ul>\n<p>可以通过js模拟类似media查询的功能，在布局足够宽的时候才加载某些第三方组件：  </p>\n<pre><code>if(document.documentElement.clientWidth &gt;=600) {\n    // 加载组件\n}\n</code></pre>\n<p><a id='id6'></a></p>\n<h2 id=\"总结\">总结</h2>\n<ol>\n<li>影响显示排版的是布局视口，布局视口变了，整个页面排版位置才会改变。</li>\n<li>一般移动端进行适配：<code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0,userscalable=no&quot;&gt;</code></li>\n<li>当然还可以\b利用js获取布局视口大小，进一步设置，适配出自己想要的效果。</li>\n</ol>\n"},"next":{"path":"_blogs/HTML&CSS/CSS中可以和不可以继承的属性/README.md","url":"/blog/HTML&CSS/CSS中可以和不可以继承的属性","title":"CSS中可以和不可以继承的属性","author":"yrobot","keywords":"CSS,属性,继承","createTime":1535040000000,"length":2563,"content":"<p><strong>本页目录：</strong><br><a href=\"#id1\">无继承性的属性</a><br><a href=\"#id2\">有继承性的属性</a><br><a href=\"#id3\">所有元素可以继承的属性</a><br><a href=\"#id4\">内联元素可以继承的属性</a><br><a href=\"#id5\">块级元素可以继承的属性</a>    </p>\n<p><a id='id1'></a>  </p>\n<h2 id=\"无继承性的属性\">无继承性的属性</h2>\n<ol>\n<li>display：规定元素应该生成的框的类型  </li>\n<li>文本属性：<br>vertical-align：垂直文本对齐<br>text-decoration：规定添加到文本的装饰<br>text-shadow：文本阴影效果<br>white-space：空白符的处理<br>unicode-bidi：设置文本的方向  </li>\n<li>盒子模型的属性：width. height. margin . margin-top. margin-right. margin-bottom. margin-left. border. border-style. border-top-style. border-right-style. border-bottom-style. border-left-style. border-width. border-top-width. border-right-right. border-bottom-width. border-left-width. border-color. border-top-color. border-right-color. border-bottom-color. border-left-color. border-top. border-right. border-bottom. border-left. padding. padding-top. padding-right. padding-bottom. padding-left  </li>\n<li>背景属性：background. background-color. background-image. background-repeat. background-position. background-attachment  </li>\n<li>定位属性：float. clear. position. top. right. bottom. left. min-width. min-height. max-width. max-height. overflow. clip. z-index  </li>\n<li>生成内容属性：content. counter-reset. counter-increment  </li>\n<li>轮廓样式属性：outline-style. outline-width. outline-color. outline  </li>\n<li>页面样式属性：size. page-break-before. page-break-after  </li>\n<li>声音样式属性：pause-before. pause-after. pause. cue-before. cue-after. cue. play-during  </li>\n</ol>\n<p><a id='id2'></a>  </p>\n<h2 id=\"有继承性的属性\">有继承性的属性</h2>\n<ol>\n<li>字体系列属性<br>font：组合字体<br>font-family：规定元素的字体系列<br>font-weight：设置字体的粗细<br>font-size：设置字体的尺寸<br>font-style：定义字体的风格<br>font-variant：设置小型大写字母的字体显示文本，这意味着所有的小写字母均会被转换为大写，但是所有使用小型大写字体的字母与其余文本相比，其字体尺寸更小。<br>font-stretch：对当前的 font-family 进行伸缩变形。所有主流浏览器都不支持。<br>font-size-adjust：为某个元素规定一个 aspect 值，这样就可以保持首选字体的 x-height。  </li>\n<li>文本系列属性<br>text-indent：文本缩进<br>text-align：文本水平对齐<br>line-height：行高<br>word-spacing：增加或减少单词间的空白（即字间隔）<br>letter-spacing：增加或减少字符间的空白（字符间距）<br>text-transform：控制文本大小写<br>direction：规定文本的书写方向<br>color：文本颜色  </li>\n<li>元素可见性：visibility  </li>\n<li>表格布局属性：caption-side. border-collapse. border-spacing. empty-cells. table-layout  </li>\n<li>列表布局属性：list-style-type. list-style-image. list-style-position. list-style  </li>\n<li>生成内容属性：quotes  </li>\n<li>光标属性：cursor  </li>\n<li>页面样式属性：page. page-break-inside. windows. orphans  </li>\n<li>声音样式属性：speak. speak-punctuation. speak-numeral. speak-header. speech-rate. volume. voice-family. pitch. pitch-range. stress. richness. . azimuth. elevation  </li>\n</ol>\n<p><a id='id3'></a>  </p>\n<h2 id=\"所有元素可以继承的属性\">所有元素可以继承的属性</h2>\n<ol>\n<li>元素可见性：visibility</li>\n<li>光标属性：cursor  </li>\n</ol>\n<p><a id='id4'></a>  </p>\n<h2 id=\"内联元素可以继承的属性\">内联元素可以继承的属性</h2>\n<ol>\n<li>字体系列属性</li>\n<li>除text-indent、text-align之外的文本系列属性  </li>\n</ol>\n<p><a id='id5'></a>  </p>\n<h2 id=\"块级元素可以继承的属性\">块级元素可以继承的属性</h2>\n<ol>\n<li>text-indent、text-align</li>\n</ol>\n<hr>\n"}},"__N_SSG":true}