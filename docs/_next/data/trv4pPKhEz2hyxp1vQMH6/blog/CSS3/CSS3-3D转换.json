{"pageProps":{"pre":{"path":"_blogs/微信小程序/小程序的运行.md","url":"/blog/微信小程序/小程序的运行","title":"小程序的运行","author":"yrobot","keywords":"小程序,运行","createTime":1535904000000,"length":1360,"content":"<p><strong>本页目录：</strong><br><a href=\"#id1\">小程序的运行环境</a><br><a href=\"#id2\">小程序目录结</a><br><a href=\"#id3\">小程序运行机制</a>  </p>\n<p><a id='id1'></a></p>\n<h2 id=\"小程序的运行环境\">小程序的运行环境</h2>\n<p>微信小程序运行在三端：iOS、Android 和 用于调试的开发者工具。</p>\n<p>三端的脚本执行环境以及用于渲染非原生组件的环境是各不相同的：</p>\n<ul>\n<li>在 iOS 上，小程序的 javascript 代码是运行在 JavaScriptCore 中，是由 WKWebView 来渲染的，环境有 - iOS8、iOS9、iOS10  </li>\n<li>在 Android 上，小程序的 javascript 代码是通过 X5 JSCore来解析，是由 X5 基于 Mobile Chrome 53/57 内- 核来渲染的  </li>\n<li>在 开发工具上， 小程序的 javascript 代码是运行在 nwjs 中，是由 Chrome Webview 来渲染的  </li>\n</ul>\n<p>尽管三端的环境是十分相似的，但是还是有些许区别：  </p>\n<ol>\n<li>ES6 语法支持不一致：语法上开发者可以通过开启 ES6 转 ES5 的功能来规避。详情</li>\n<li>wxss 渲染表现不一致：尽管可以通过开启样式补全来规避大部分的问题 详情，还是建议开发者需要在 iOS 和 Android 上分别检查小程序的真实表现。</li>\n</ol>\n<p><a id='id2'></a></p>\n<h2 id=\"小程序目录结\">小程序目录结</h2>\n<pre><code>project\n├── pages\n|   ├── index\n|   |   ├── index.json  index 页面配置\n|   |   ├── index.js    index 页面逻辑\n|   |   ├── index.wxml  index 页面结构\n|   |   └── index.wxss  index 页面样式表\n|   └── log\n|       ├── log.json    log 页面配置\n|       ├── log.wxml    log 页面逻辑\n|       ├── log.js      log 页面结构\n|       └── log.wxss    log 页面样式表·\n├── app.js              小程序逻辑\n├── app.json            小程序公共设置\n└── app.wxss            小程序公共样式表\n</code></pre>\n<p><a id='id3'></a></p>\n<h2 id=\"小程序运行机制\">小程序运行机制</h2>\n<ul>\n<li>小程序没有重启的概念</li>\n<li><strong>前台、后台定义：</strong> 当用户点击左上角关闭，或者按了设备 Home 键离开微信，小程序并没有直接销毁，而是进入了后台；当再次进入微信或再次打开小程序，又会从后台进入前台。需要注意的是：只有当小程序进入后台一定时间，或者系统资源占用过高，才会被真正的销毁。</li>\n<li>当小程序进入后台，客户端会维持一段时间的运行状态，超过一定时间后（目前是5分钟）会被微信主动销毁</li>\n<li>当短时间内（5s）连续收到两次以上收到系统内存告警，会进行小程序的销毁\n<img src=\"https://ws3.sinaimg.cn/large/0069RVTdgy1fuwgqm9y1oj30my0bxgmx.jpg\" alt=\"\"></li>\n</ul>\n"},"blog":{"path":"_blogs/CSS3/CSS3-3D转换/README.md","url":"/blog/CSS3/CSS3-3D转换","title":"CSS3-3D转换","author":"yrobot","keywords":"3D,CSS3,转换","createTime":1535644800000,"length":5528,"content":"<p><strong>本页目录：</strong><br><a href=\"#id1\">3D\b元素的属性</a>  </p>\n<ul>\n<li><a href=\"#id11\">transform</a></li>\n<li><a href=\"#id12\">transform-origin</a></li>\n<li><a href=\"#id13\">transform-style</a></li>\n<li><a href=\"#id14\">perspective</a></li>\n<li><a href=\"#id15\">perspective-origin</a>  </li>\n<li><a href=\"#id16\">backface-visibility</a>  </li>\n</ul>\n<p><a href=\"#id2\">3D元素的方法</a>  </p>\n<p><strong>CSS3新增的3D变换属性：</strong>  CSS3 3D 转换支持开发者在css代码中利用css3的3D函数，在页面里开发出一些简单的3D效果。  </p>\n<p><strong>本节内容要点：</strong>  </p>\n<ul>\n<li>利用transform改变各个元素位置  </li>\n<li>利用transition增加动态效果  </li>\n<li>利用perspective属性改变视角  </li>\n</ul>\n<p><a href=\"\" id=\"id1\"></a></p>\n<h2 id=\"3d\b元素的属性\">3D\b元素的属性</h2>\n<p><a href=\"\" id=\"id11\"></a></p>\n<ol>\n<li>__transform__：利用一些方法对元素进行2D或者3D转换。具体\b转换方法参看 <a href=\"#id2\">3D元素的方法</a><br><strong>语法：</strong> <code>transform: none|transform-functions;</code>  <ul>\n<li><code>none</code> 定义不进行转换。  </li>\n<li><code>transform-functions</code> 使用<a href=\"#id2\">3D元素的方法</a>  </li>\n</ul>\n</li>\n</ol>\n<p><a href=\"\" id=\"id12\"></a></p>\n<ol start=\"2\">\n<li><p>__transform-origin__：设置元素坐标系原点的位置，影响到2D、3D的旋转效果<br><strong>语法：</strong> <code>transform-origin: x-axis y-axis z-axis;</code>      </p>\n<ul>\n<li>x-axis    定义视图被置于 X 轴的何处。可能的值：<br><em>left</em><br><em>center</em><br><em>right</em><br><em>length</em><br><em>%</em>  </li>\n<li>y-axis    定义视图被置于 Y 轴的何处。可能的值：<br><em>top</em><br><em>center</em><br><em>bottom</em><br><em>length</em><br><em>%</em>  </li>\n<li>z-axis    定义视图被置于 Z 轴的何处。可能的值：<br><em>length</em></li>\n</ul>\n<p><strong>示例：</strong> <code>-webkit-transform-origin:20% 40%;    /* Safari 和 Chrome */</code>   </p>\n<p><strong>取值对比：</strong>  1.数字和百分比相对于左上角 2.关键字相对于整个元素  </p>\n<pre><code> top = top center = center top = 50% 0  \n right = right center = center right = 100%或(100% 50%)  \n bottom = bottom center = center bottom = 50% 100%  \n left = left center = center left = 0或(0 50%)   \n center = center center = 50%或（50% 50%）  \n top left = left top = 0 0  \n right top = top right = 100% 0  \n bottom right = right bottom = 100% 100%  \n bottom left = left bottom = 0 100%  \n</code></pre>\n<p><strong>浏览器支持</strong><br><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fut27g9rczj30v806oabn.jpg\" alt=\"\">\nInternet Explorer 10、Firefox、Opera 支持 transform-origin 属性。<br>Internet Explorer 9 支持替代的 -ms-transform-origin 属性（仅适用于 2D 转换）。<br>Safari 和 Chrome 支持替代的 -webkit-transform-origin 属性（3D 和 2D 转换）。<br>Opera 只支持 2D 转换。  </p>\n</li>\n</ol>\n<p><a href=\"\" id=\"id13\"></a>   </p>\n<ol start=\"3\">\n<li>__transform-style__：规定如何在 3D 空间中呈现被嵌套的元素<br><strong>语法：</strong> <code>transform-style: flat|preserve-3d;</code>  \b   <ul>\n<li><code>flat</code>    所有子元素在 2D 平面呈现。<br> 沿着X轴或Y轴方向旋转该元素将导致位于正或负Z轴位置的子元素显示在该元素的平面上，而不是它的前面或者后面。著作权归作者所有。  </li>\n<li><code>preserve-3d</code>    子元素将保留其 3D 位置。    </li>\n</ul>\n<strong>示例：</strong> <code>-webkit-transform-style: preserve-3d;    /* Safari 和 Chrome */</code>  <strong>浏览器支持</strong><br><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fut2ohsc19j30v006mtae.jpg\" alt=\"\">\nFirefox 支持 transform-style 属性。<br>Chrome、Safari 和 Opera 支持替代的 -webkit-transform-style 属性。 </li>\n</ol>\n<p><a href=\"\" id=\"id14\"></a></p>\n<ol start=\"4\">\n<li>__perspective__：perspective 属性定义 3D 元素距视图的距离，以像素计。（改变视角距离）  <ul>\n<li>提示：请与 perspective-origin 属性一同使用该属性，这样您就能够改变 3D 元素的底部位置。   </li>\n</ul>\n<strong>语法：</strong> <code>perspective: number|none;</code>  <ul>\n<li><code>number</code>    元素距离视图的距离，以像素计。  </li>\n<li><code>none</code>    默认值。与 0 相同。不设置透视。  </li>\n</ul>\n<strong>示例：</strong> <pre><code>div\n{\nperspective: 500;\n-webkit-perspective: 500; /* Safari 和 Chrome */\n}\n</code></pre>\n <strong>浏览器支持</strong><br>目前浏览器都不支持 perspective 属性。<br>Chrome 和 Safari 支持替代的 -webkit-perspective 属性。  </li>\n</ol>\n<p><a href=\"\" id=\"id15\"></a></p>\n<ol start=\"5\">\n<li><p>__perspective-origin__：改变 3D 元素的底部位置（改变视角的朝向）<br><strong>语法：</strong> <code>perspective-origin: x-axis y-axis;</code> 数字和百分比相对于左上角   </p>\n<ul>\n<li>x-axis    定义视图被置于 X 轴的何处。可能的值：<br><em>left</em><br><em>center</em><br><em>right</em><br><em>length</em><br><em>%</em>  </li>\n<li>y-axis    定义视图被置于 Y 轴的何处。可能的值：<br><em>top</em><br><em>center</em><br><em>bottom</em><br><em>length</em><br><em>%</em>  </li>\n</ul>\n<p><strong>示例：</strong> </p>\n<pre><code>div\n {\n perspective:150;\n perspective-origin: 10% 10%;\n -webkit-perspective:150;    /* Safari 和 Chrome */\n -webkit-perspective-origin: 10% 10%;    /* Safari 和 Chrome */\n }\n</code></pre>\n<p><strong>浏览器支持</strong><br>目前浏览器都不支持 perspective-origin 属性。<br>Chrome 和 Safari 支持替代的 -webkit-perspecitve-origin 属性。  </p>\n</li>\n</ol>\n<p><a href=\"\" id=\"id16\"></a></p>\n<ol start=\"6\">\n<li><p>__backface-visibility__：backface-visibility 属性定义当元素不面向屏幕时是否可见。<br><strong>语法：</strong> <code>backface-visibility 属性定义当元素不面向屏幕时是否可见。</code>   </p>\n<ul>\n<li><code>visible</code>    背面是可见的。  </li>\n<li><code>hidden</code>    背面是不可见的。  </li>\n</ul>\n<p><strong>示例：</strong>   </p>\n<pre><code>div\n {\n backface-visibility:hidden;\n -webkit-backface-visibility:hidden;    /* Chrome 和 Safari */\n -moz-backface-visibility:hidden;     /* Firefox */\n -ms-backface-visibility:hidden;     /* Internet Explorer */\n }\n</code></pre>\n<p><strong>浏览器支持</strong><br>只有 Internet Explorer 10+ 和 Firefox 支持 backface-visibility 属性。<br>Opera 15+、Safari 和 Chrome 支持替代的 -webkit-backface-visibility 属性。<br><a id='id2'></a></p>\n</li>\n</ol>\n<h2 id=\"3d元素的方法\">3D元素的方法</h2>\n<p><strong>语法：</strong> <code>transform: none|transform-functions;</code> 方法使用应该加<code>transform:</code>前缀   </p>\n<ul>\n<li><code>none</code>    定义不进行转换。  </li>\n<li><code>transform-functions</code>    3D变换函数。具体函数及功能如下：  <ul>\n<li><em>matrix3d(n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n)</em>    定义 3D 转换，使用 16 个值的 4x4 矩阵。  </li>\n<li><em>translate3d(x,y,z)</em>    定义 3D 转化。  </li>\n<li><em>translateX(x)</em>    定义 3D 转化，仅使用用于 X 轴的值。  </li>\n<li><em>translateY(y)</em>    定义 3D 转化，仅使用用于 Y 轴的值。  </li>\n<li><em>translateZ(z)</em>    定义 3D 转化，仅使用用于 Z 轴的值。  </li>\n<li><em>scale3d(x,y,z)</em>    定义 3D 缩放转换。  </li>\n<li><em>scaleX(x)</em>    定义 3D 缩放转换，通过给定一个 X 轴的值。  </li>\n<li><em>scaleY(y)</em>    定义 3D 缩放转换，通过给定一个 Y 轴的值。  </li>\n<li><em>scaleZ(z)</em>    定义 3D 缩放转换，通过给定一个 Z 轴的值。  </li>\n<li><em>rotate3d(x,y,z,angle)</em>    定义 3D 旋转。  </li>\n<li><em>rotateX(angle)</em>    定义沿 X 轴的 3D 旋转。  </li>\n<li><em>rotateY(angle)</em>    定义沿 Y 轴的 3D 旋转。  </li>\n<li><em>rotateZ(angle)</em>    定义沿 Z 轴的 3D 旋转。  </li>\n<li><em>perspective(n)</em>    定义 3D 转换元素的透视视图。  </li>\n</ul>\n</li>\n</ul>\n<p><strong>示例：</strong>   </p>\n<pre><code>div\n{\ntransform:rotate(7deg);\n-ms-transform:rotate(7deg);     /* IE 9 */\n-moz-transform:rotate(7deg);     /* Firefox */\n-webkit-transform:rotate(7deg); /* Safari 和 Chrome */\n-o-transform:rotate(7deg);     /* Opera */\n}\n</code></pre>\n<p><strong>浏览器支持</strong><br><img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fuqf7u1vz0j30u204ot9y.jpg\" alt=\"\">\nInternet Explorer 10、Firefox、Opera 支持 transform 属性。<br>Internet Explorer 9 支持替代的 -ms-transform 属性（仅适用于 2D 转换）。<br>Safari 和 Chrome 支持替代的 -webkit-transform 属性（3D 和 2D 转换）。<br>Opera 只支持 2D 转换。</p>\n"},"next":{"path":"_blogs/CSS3/CSS3-2D转换/README.md","url":"/blog/CSS3/CSS3-2D转换","title":"CSS3-2D转换","author":"yrobot","keywords":"2D,CSS3,转换","createTime":1535385600000,"length":2138,"content":"<p><strong>本页目录：</strong><br><a href=\"#id1\">怎么使用</a>  </p>\n<ul>\n<li><a href=\"#id11\">平移函数translate()</a></li>\n<li><a href=\"#id12\">旋转函数rotate()</a></li>\n<li><a href=\"#id13\">缩放函数scale()</a></li>\n<li><a href=\"#id14\">倾斜函数skew()</a></li>\n<li><a href=\"#id15\">矩阵操作matrix()</a>  </li>\n</ul>\n<p><a href=\"#id2\">浏览器支持</a>  </p>\n<p><strong>CSS3新增的2D变换属性：</strong>   通过 CSS3 转换，我们能够对元素进行移动、缩放、转动、拉长或拉伸。</p>\n<p><a href=\"\" id=\"id1\"></a></p>\n<h2 id=\"怎么使用\">怎么使用</h2>\n<p><a href=\"\" id=\"id11\"></a></p>\n<ol>\n<li><p>__translate()__：设置元素相对于当前的位置。<br><strong>语法：</strong> <code>transform: translate(length,length);</code>  </p>\n<ul>\n<li>设置元素基于当前位置向右向下偏移。\b   </li>\n<li><code>length</code> 偏离的距离数据。<br><strong>示例：</strong> <code>transform: translate(50px,100px);</code><br><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fuockbel15j30ai0euwey.jpg\" alt=\"\"> \n<a href=\"\" id=\"id12\"></a></li>\n</ul>\n</li>\n<li><p>__rotate()__：将元素进行顺时针旋转，旋转中心<code>transform-origin</code>进行设置，默认为元素中心<br><strong>语法：</strong> <code>transform: rotate(rot);</code>     </p>\n<ul>\n<li><code>rot</code> 元素顺时针转动的角度数据。<br><strong>示例：</strong> <code>transform: rotate(30deg);</code><br><img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fuockq1b1rj308i0aggmc.jpg\" alt=\"\">\n<a href=\"\" id=\"id13\"></a>   </li>\n</ul>\n</li>\n<li><p>__scale()__：使用scale方法来实现文字或图像的缩放处理<br><strong>语法：</strong> <code>transform: scale(times);</code>  \b   </p>\n<ul>\n<li><code>times</code> 数字，表示相对于当前元素缩放的倍数。可以有两个参数，表示长宽。<br><strong>示例：</strong> <code>transform: scale(0.5, 2);</code><br><img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fuoclaoa1uj30fa0lqjsf.jpg\" alt=\"\">\n<a href=\"\" id=\"14\"></a></li>\n</ul>\n</li>\n<li><p>__skew()__：使用skew方法来实现文字或图像的倾斜处理，默认坐标中心在元素中心<br><strong>语法：</strong> <code>transform: skew(rot);</code>  </p>\n<ul>\n<li>参数中分布指定水平方向上的倾斜角度与垂直方向上的倾斜角度。第一个围绕X轴，第二个围绕Y轴    </li>\n<li><code>rot</code> 一方向的倾斜角度。<br><strong>示例：</strong> <code>transform: skew(30deg, 30deg);</code><br><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fuocmattrhj30880a4jrw.jpg\" alt=\"\">\n<a href=\"\" id=\"15\"></a></li>\n</ul>\n</li>\n<li><p>__matrix()__：矩阵操作。matrix() 方法可以把所有 2D 转换方法组合在一起<br><strong>语法：</strong> <code>transform: matrix(a,b,c,d,e,f);</code>  </p>\n<ul>\n<li>实际上，这6参数，对应的矩阵如下： <em>注意书写方向是竖着的\b</em><br><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fuoak0zwuhj304302kq2w.jpg\" alt=\"\">  </li>\n<li>进行运算：<br><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fuoaq82zpxj30cm02xwep.jpg\" alt=\"\"><br>坐标就从[x,y]变成了[ax+cy+e,bx+dy+f]  </li>\n<li>关于为什么要<code>3*3</code>的矩阵？<br>主要是为了统一用矩阵乘的操作，其实平移只需要<code>2*2</code>，为了统一利用<code>3*3</code>乘法变相实现加法(平移)效果。具体思想参考计算机图形学<br><strong>示例：</strong> <code>transform: matrix(1, 0, 0, 1, 30, 30);</code>根据运算，可以得出此矩阵可以将元素向右下平移[30,30]   </li>\n</ul>\n</li>\n</ol>\n<p><a id='id2'></a></p>\n<h2 id=\"浏览器支持\">浏览器支持</h2>\n<p><img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fuo7z8j9byj318s04s3zs.jpg\" alt=\"\"><br>Chrome 和 Safari 需要前缀 -webkit-<br>Internet Explorer 9 需要前缀 -ms-  </p>\n"}},"__N_SSG":true}